%{
from inthsm import HHAccept, HHAbort

import sys

def getch(pd):
    print('\nEnter [a - h], or [x|X] to exit/abort...\n> ', end='', flush=True);
    while True:
       ch = sys.stdin.read(1)
       if ch != '\n':
           return ch

class MyData:
    test = 0

%}

%event	a b c d e f g h
	x X

%state	s0
	  -> { print('s0-ENTRY;') }
	  <- { print('s0-EXIT;') }
	s1
	  -> { print('s1-ENTRY;') }
	  <- { print('s1-EXIT;') }
	s11
	  -> { print('s11-ENTRY;') }
	  <- { print('s11-EXIT;') }
	s2
	  -> { print('s2-ENTRY;') }
	  <- { print('s2-EXIT;') }
	s21
	  -> { print('s21-ENTRY;') }
	  <- { print('s21-EXIT;') }
	s211
	  -> { print('s211-ENTRY;') }
	  <- { print('s211-EXIT;') }

%hiera	s0 (s1 (s11),
	    s2 (s21 (s211)))

%start	s0	{ print('Keypress-START;') }

%%

s0: . -> s1	{ print('s0-INIT;') }
    e -> s211	{ print('s0-e-s211;') }
    x --	{ HHAccept() }
    X --	{ HHAbort() }
;

s1: . -> s11	{ print('s1-INIT;') }
    a -> s1	{ print('s1-a-s1;') }
    b -> s11	{ print('s1-b-s11;') }
    c -> s2	{ print('s1-c-s2;') }
    d -> s0	{ print('s1-d-s0;') }
    f -> s211	{ print('s1-f-s211;') }
;

s11: g -> s211	{ print('s11-g-s211;') }
     h ?(pd.test == 1) -- { pd.test = 0
                            print('s11-h-;') }
;

s2: . -> s21	{ print('s2-INIT;') }
    c -> s1	{ print('s2-c-s1;') }
    f -> s11	{ print('s2-f-s11;') }
;

s21: . -> s211	{ print('s21-INIT;') }
     b -> s211	{ print('s21-b-s211;') }
     h ?(pd.test == 0) -> s21 { pd.test = 1
                                print('s21-h-s21;') }
;

s211: d -> s21	{ print('s211-d-s21;') }
      g -> s0	{ print('s211-g-s0;') }
;


%%

myKeypress = Keypress(getch, MyData())
ec = myKeypress.run()
sys.exit(ec)

# all done!
